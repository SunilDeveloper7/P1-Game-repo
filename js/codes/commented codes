//constant
//Game logic variable & state
//Dom reference
// Function and game Logic
//Event listner

// const box = 25;
// const canvasSize = 23;


// canvas.width = 1000;
// canvas.height = 600;
// var btn = document.createElement("BUTTON");   // Create a <button> element
// btn.classList.add("btn1");  // Add a highlight class
// btn.innerHTML = "Start";                   // Insert text
// document.body.appendChild(btn);               // Append <button> to <body>





  // ctx.fillStyle = 'red'
    // ctx.fillRect(700,60,50,200);
    // ctx.fillRect(200,200,50,300);
    // ctx.fillRect(400,60,100,50);
    // ctx.fillRect(800,450,50,50);
    // ctx.fillRect(500,350,50,200);
    // ctx.fillRect(0,300,50,100);
    // ctx.fillRect(500,60,50,200);

    // function collisionTest() {
//     console.log('x is:',snake.x,apple.appleX,'y is',snake.y,apple.appleY);

// }


// function drawSnake() {
// //     ctx.fillStyle = 'orange';
// //     ctx.fillRect(headX * tileCount,snake.y* tileCount,tileSize,tileSize);
// }

// function changeSnakePosition() {
//     headX = headX + xVelocity;
//     headY = headY + yVelocity;
// }
// function drawApple() {
//     ctx.fillStyle = 'blue';
//     ctx.fillRect (apple.x*tileCount,appleY*tileCount,tileSize,tileSize)
// }


// function checkAppleCollision() {
//     let appleLeft = snake.x + snake.width >= apple.x
//     // console.log('appleLeft',appleLeft);

//     let appleRight =snake.x <=apple.x +apple.width
//     // console.log('appleRight', appleRight)

//     let checkX = appleLeft && appleRight
//     //console.log(check)

//     let appleTop = snake.y +snake.height >=apple.y
//     // console.log('appleTop' ,appleTop);
//     let appleBottom = snake.y <=apple.y + apple.height
//     // console.log('appleBottom',appleBottom);
//     let checkY = appleTop && appleBottom
//     // console.log(checkY)

//     let checkXY = checkY && checkX
//     console.log(checkXY);

// //     if(
//         //left
//         snake.x + snake.width >= apple.x &&
//         //right
//         snake.x <=apple.x + apple.width &&
//         //top
//         snake.y + snake.height >= apple.y &&
//         //bottom
//         snake.y <= apple.y + appple.height
//         ) {
//         //do something
//         console.log('checkAppleCollision');
    

//         }

//     }



// function Snaketail() {
//     if(apple.x === snake.x && apple.y == snake.y) {

//         newLenght =  ctx.fillStyle = this.color;
//         ctx.fillRect(this.x * tileCount,this.y* tileCount,tileSize,tileSize);
//         this.x = this.x + this.xVelocity;
//     this.y = this.y + this.yVelocity;

//     newLength =snake.push();




function isGameOver(){
    let gameOver = false;

    if(yVelocity ===0 && xVelocity ===0){
        return false;
    }
    
    //walls
    if(snake.x < 0 ){
        gameOver = true;
    }
    else if(snake.x === tileCount){
        gameOver = true
    }
    else if( y < 0){
        gameOver = true;
    }
    else if(y === tileCount){
        gameOver = true
    }

    for(let i =0; i < snakeParts.length; i++){
        let part = snakeParts[i];
        if(part.x === snake.x && part.y === y){
            gameOver = true;
            break;
        }
    }
    if (gameOver) {
        ctx.fillStyle = "white";
        ctx.font = "50px Verdana";

        if (gameOver) {
            ctx.fillStyle = "white";
            ctx.font = "50px Verdana";
        
            var gradient = ctx.createLinearGradient(0, 0, canvas.width, 0);
            gradient.addColorStop("0", " magenta");
            gradient.addColorStop("0.5", "blue");
            gradient.addColorStop("1.0", "red");
            // Fill with gradient
            ctx.fillStyle = gradient;
        
            ctx.fillText("Game Over!", canvas.width / 6.5, canvas.height / 2);
    }
    
        
        ctx.fillText("Game Over!", canvas.width / 6.5, canvas.height / 2);
    }

    return gameOver;
}




grow() {
        ctx.fillStyle = 'green';
        for(let i =0; i < snakeParts.length; i++){
        let part =  snakeParts[i];
        ctx.fillRect(part.x * tileCount, part.y * tileCount, tileSize, tileSize);
    }

    snakeParts.push(new SnakePart(this.x, this.y)); //put an item at the end of the list next to the head
    while (snakeParts.length > tailLength){ 
        snakeParts.shift(); // remove the furthet item from the snake parts if have more than our tail size.
    }

    ctx.fillStyle =  'orange';
    ctx.fillRect(this.x * tileCount, this.x* tileCount, tileSize,tileSize);


    canvas.width


     //walls
        // if(snake.x < 0 ){
        //     gameOver = true;
        // }
        // else if(snake.x === tileCount){
        //     gameOver = true
        // }
        // else if( snake.y < 0){
        //     gameOver = true;
        // }
        // else if(snake.y === tileCount){
        //     gameOver = true
        // }
    
        // for(let i =0; i < snakeParts.length; i++){
        //     let part = snakeParts[i];
        //     if(snake.x === snake.x && part.y === snake.y){
        //         gameOver = true;
        //         // break;
        //     }
        // }
    
        //         if (gameOver) {
        //         ctx.fillStyle = "white";
        //         ctx.font = "50px Verdana";
            
        //         var gradient = ctx.createLinearGradient(0, 0, tileCount, 0);
        //         gradient.addColorStop("0", " magenta");
        //         gradient.addColorStop("0.5", "blue");
        //         gradient.addColorStop("1.0", "red");
        //         // Fill with gradient
        //         ctx.fillStyle = gradient;
            
        //         ctx.fillText("Game Over!", canvas.width / 6.5, canvas.height / 2);
            
        
            
        //     ctx.fillText("Game Over!", canvas.width / 6.5, canvas.height / 2);

            
        
        // }
    